// -alpha_dither yes -dither 2 -non_opaque_image_format ARGB8888 -opaque_image_format RGB565 0x58a83128
// Generated by imageconverter. Please, do not edit!

#include <touchgfx/Bitmap.hpp>
#include <BitmapDatabase.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

extern const unsigned char _background[];
extern const unsigned char _blue_buttons_round_edge_medium[];
extern const unsigned char _blue_buttons_round_edge_medium_pressed[];
extern const unsigned char _blue_buttons_round_edge_small[];
extern const unsigned char _blue_buttons_round_edge_small_pressed[];
extern const unsigned char _blue_buttons_round_icon_button[];
extern const unsigned char _blue_buttons_round_icon_button_pressed[];
extern const unsigned char _blue_check_buttons_check_mark_active[];
extern const unsigned char _blue_check_buttons_check_mark_inactive[];
extern const unsigned char _blue_check_buttons_check_mark_normal[];
extern const unsigned char _blue_check_buttons_check_mark_pressed[];
extern const unsigned char _blue_slider_horizontal_medium_indicators_slider_round_nob[];
extern const unsigned char _blue_slider_horizontal_medium_slider_round_back[];
extern const unsigned char _blue_slider_horizontal_medium_slider_round_fill[];

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _background, 0, 800, 480, 0, 0, 800, 480, touchgfx::Bitmap::RGB565 },
    { _blue_buttons_round_edge_medium, 0, 230, 60, 9, 4, 212, 50, touchgfx::Bitmap::ARGB8888 },
    { _blue_buttons_round_edge_medium_pressed, 0, 230, 60, 9, 4, 212, 50, touchgfx::Bitmap::ARGB8888 },
    { _blue_buttons_round_edge_small, 0, 170, 60, 11, 4, 148, 50, touchgfx::Bitmap::ARGB8888 },
    { _blue_buttons_round_edge_small_pressed, 0, 170, 60, 11, 4, 148, 50, touchgfx::Bitmap::ARGB8888 },
    { _blue_buttons_round_icon_button, 0, 60, 60, 13, 11, 34, 36, touchgfx::Bitmap::ARGB8888 },
    { _blue_buttons_round_icon_button_pressed, 0, 60, 60, 13, 11, 34, 36, touchgfx::Bitmap::ARGB8888 },
    { _blue_check_buttons_check_mark_active, 0, 44, 44, 3, 3, 38, 38, touchgfx::Bitmap::ARGB8888 },
    { _blue_check_buttons_check_mark_inactive, 0, 44, 44, 3, 3, 38, 38, touchgfx::Bitmap::ARGB8888 },
    { _blue_check_buttons_check_mark_normal, 0, 44, 44, 3, 3, 38, 38, touchgfx::Bitmap::ARGB8888 },
    { _blue_check_buttons_check_mark_pressed, 0, 44, 44, 3, 3, 38, 38, touchgfx::Bitmap::ARGB8888 },
    { _blue_slider_horizontal_medium_indicators_slider_round_nob, 0, 48, 48, 9, 7, 30, 32, touchgfx::Bitmap::ARGB8888 },
    { _blue_slider_horizontal_medium_slider_round_back, 0, 352, 15, 7, 0, 338, 14, touchgfx::Bitmap::ARGB8888 },
    { _blue_slider_horizontal_medium_slider_round_fill, 0, 352, 15, 7, 1, 338, 12, touchgfx::Bitmap::ARGB8888 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}

