/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_uart_screen/Screen_UARTViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

Screen_UARTViewBase::Screen_UARTViewBase() :
    buttonCallback(this, &Screen_UARTViewBase::buttonCallbackHandler)
{
    backgroundBox_Black.setPosition(0, 0, 800, 480);
    backgroundBox_Black.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    buttonWithLabel_GoToMainMenu.setXY(315, 420);
    buttonWithLabel_GoToMainMenu.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonWithLabel_GoToMainMenu.setLabelText(TypedText(T_SINGLEUSEID18));
    buttonWithLabel_GoToMainMenu.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel_GoToMainMenu.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel_GoToMainMenu.setAction(buttonCallback);

    buttonWithLabel_SendUartHello.setXY(315, 85);
    buttonWithLabel_SendUartHello.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonWithLabel_SendUartHello.setLabelText(TypedText(T_SINGLEUSEID21));
    buttonWithLabel_SendUartHello.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel_SendUartHello.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel_SendUartHello.setAction(buttonCallback);

    buttonWithLabel_ClearUart.setXY(630, 229);
    buttonWithLabel_ClearUart.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonWithLabel_ClearUart.setLabelText(TypedText(T_SINGLEUSEID36));
    buttonWithLabel_ClearUart.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 0, 0));
    buttonWithLabel_ClearUart.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel_ClearUart.setAction(buttonCallback);

    textArea_UartRX.setPosition(0, 272, 599, 49);
    textArea_UartRX.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_UartRX.setLinespacing(0);
    Unicode::snprintf(textArea_UartRXBuffer, TEXTAREA_UARTRX_SIZE, "%s", TypedText(T_SINGLEUSEID34).getText());
    textArea_UartRX.setWildcard(textArea_UartRXBuffer);
    textArea_UartRX.setTypedText(TypedText(T_SINGLEUSEID22));

    textArea_UartTX.setPosition(0, 191, 599, 49);
    textArea_UartTX.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_UartTX.setLinespacing(0);
    Unicode::snprintf(textArea_UartTXBuffer, TEXTAREA_UARTTX_SIZE, "%s", TypedText(T_SINGLEUSEID35).getText());
    textArea_UartTX.setWildcard(textArea_UartTXBuffer);
    textArea_UartTX.setTypedText(TypedText(T_SINGLEUSEID23));

    textArea_UARTHeader.setXY(346, 0);
    textArea_UARTHeader.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_UARTHeader.setLinespacing(0);
    textArea_UARTHeader.setTypedText(TypedText(T_SINGLEUSEID13));

    textArea_CPU_Usage.setPosition(618, 451, 182, 29);
    textArea_CPU_Usage.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_CPU_Usage.setLinespacing(0);
    Unicode::snprintf(textArea_CPU_UsageBuffer, TEXTAREA_CPU_USAGE_SIZE, "%s", TypedText(T_SINGLEUSEID128).getText());
    textArea_CPU_Usage.setWildcard(textArea_CPU_UsageBuffer);
    textArea_CPU_Usage.setTypedText(TypedText(T_SINGLEUSEID127));

    add(backgroundBox_Black);
    add(buttonWithLabel_GoToMainMenu);
    add(buttonWithLabel_SendUartHello);
    add(buttonWithLabel_ClearUart);
    add(textArea_UartRX);
    add(textArea_UartTX);
    add(textArea_UARTHeader);
    add(textArea_CPU_Usage);
}

void Screen_UARTViewBase::setupScreen()
{

}

void Screen_UARTViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_GoToMainMenu)
    {
        //Interaction_GoBackToMainMenu
        //When buttonWithLabel_GoToMainMenu clicked change screen to Screen_Main
        //Go to Screen_Main with no screen transition
        application().gotoScreen_MainScreenNoTransition();
    }
    else if (&src == &buttonWithLabel_SendUartHello)
    {
        //Interaction_SendUARTHello
        //When buttonWithLabel_SendUartHello clicked call virtual function
        //Call sendUARTHello
        sendUARTHello();
    }
    else if (&src == &buttonWithLabel_ClearUart)
    {
        //InteractionClearTX
        //When buttonWithLabel_ClearUart clicked set wildcard textArea_UartTX
        //Set textArea_UartTX wildcard to SingleUseId37
        Unicode::snprintf(textArea_UartTXBuffer, TEXTAREA_UARTTX_SIZE, "%s", TypedText(T_SINGLEUSEID37).getText());
        textArea_UartTX.setWildcard(textArea_UartTXBuffer);
        textArea_UartTX.invalidate();

        //InteractionClearRX
        //When InteractionClearTX completed set wildcard textArea_UartRX
        //Set textArea_UartRX wildcard to SingleUseId38
        Unicode::snprintf(textArea_UartRXBuffer, TEXTAREA_UARTRX_SIZE, "%s", TypedText(T_SINGLEUSEID38).getText());
        textArea_UartRX.setWildcard(textArea_UartRXBuffer);
        textArea_UartRX.invalidate();
    }
}
