/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_module1_screen/Screen_Module1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

Screen_Module1ViewBase::Screen_Module1ViewBase() :
    buttonCallback(this, &Screen_Module1ViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &Screen_Module1ViewBase::sliderValueChangedCallbackHandler)
{
    CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    backgroundBox_Module1.setPosition(0, 0, 800, 480);
    backgroundBox_Module1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    buttonWithLabel_GoToMainMenu.setXY(315, 420);
    buttonWithLabel_GoToMainMenu.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonWithLabel_GoToMainMenu.setLabelText(TypedText(T_SINGLEUSEID66));
    buttonWithLabel_GoToMainMenu.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel_GoToMainMenu.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel_GoToMainMenu.setAction(buttonCallback);

    textArea_CPU_Usage.setPosition(618, 451, 182, 29);
    textArea_CPU_Usage.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_CPU_Usage.setLinespacing(0);
    Unicode::snprintf(textArea_CPU_UsageBuffer, TEXTAREA_CPU_USAGE_SIZE, "%s", TypedText(T_SINGLEUSEID70).getText());
    textArea_CPU_Usage.setWildcard(textArea_CPU_UsageBuffer);
    textArea_CPU_Usage.setTypedText(TypedText(T_SINGLEUSEID69));

    buttonWithLabel_SetValue.setXY(519, 360);
    buttonWithLabel_SetValue.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonWithLabel_SetValue.setLabelText(TypedText(T_SINGLEUSEID113));
    buttonWithLabel_SetValue.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel_SetValue.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel_SetValue.setAction(buttonCallback);

    slider_Value.setXY(415, 285);
    slider_Value.setBitmaps(Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_BACK_ID), Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_FILL_ID), Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_INDICATORS_SLIDER_ROUND_NOB_ID));
    slider_Value.setupHorizontalSlider(2, 19, 2, 0, 310);
    slider_Value.setValueRange(0, 100);
    slider_Value.setValue(0);
    slider_Value.setNewValueCallback(sliderValueChangedCallback);

    radioButtonParameter2.setXY(645, 114);
    radioButtonParameter2.setBitmaps(Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_MARK_INACTIVE_ID), Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_MARK_PRESSED_ID), Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_MARK_ACTIVE_ID), Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_MARK_NORMAL_ID));
    radioButtonParameter2.setSelected(false);
    radioButtonParameter2.setDeselectionEnabled(false);

    textArea_Parameter2.setXY(606, 109);
    textArea_Parameter2.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_Parameter2.setLinespacing(0);
    textArea_Parameter2.setTypedText(TypedText(T_SINGLEUSEID112));

    radioButtonParameter1.setXY(519, 114);
    radioButtonParameter1.setBitmaps(Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_MARK_INACTIVE_ID), Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_MARK_PRESSED_ID), Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_MARK_ACTIVE_ID), Bitmap(BITMAP_BLUE_CHECK_BUTTONS_CHECK_MARK_NORMAL_ID));
    radioButtonParameter1.setSelected(true);
    radioButtonParameter1.setDeselectionEnabled(false);

    textArea_Parameter1.setXY(480, 109);
    textArea_Parameter1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_Parameter1.setLinespacing(0);
    textArea_Parameter1.setTypedText(TypedText(T_SINGLEUSEID111));

    line_Middle.setPosition(393, 49, 15, 371);
    line_MiddlePainter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    line_Middle.setPainter(line_MiddlePainter);
    line_Middle.setStart(4, 5);
    line_Middle.setEnd(4, 367);
    line_Middle.setLineWidth(6);
    line_Middle.setLineEndingStyle(Line::ROUND_CAP_ENDING);

    textArea_CRC.setPosition(0, 269, 350, 49);
    textArea_CRC.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_CRC.setLinespacing(0);
    Unicode::snprintf(textArea_CRCBuffer, TEXTAREA_CRC_SIZE, "%s", TypedText(T_SINGLEUSEID72).getText());
    textArea_CRC.setWildcard(textArea_CRCBuffer);
    textArea_CRC.setTypedText(TypedText(T_SINGLEUSEID71));

    textArea_Value.setPosition(0, 220, 350, 49);
    textArea_Value.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_Value.setLinespacing(0);
    Unicode::snprintf(textArea_ValueBuffer, TEXTAREA_VALUE_SIZE, "%s", TypedText(T_SINGLEUSEID74).getText());
    textArea_Value.setWildcard(textArea_ValueBuffer);
    textArea_Value.setTypedText(TypedText(T_SINGLEUSEID73));

    textArea_ParameterID.setPosition(0, 171, 351, 49);
    textArea_ParameterID.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_ParameterID.setLinespacing(0);
    Unicode::snprintf(textArea_ParameterIDBuffer, TEXTAREA_PARAMETERID_SIZE, "%s", TypedText(T_SINGLEUSEID76).getText());
    textArea_ParameterID.setWildcard(textArea_ParameterIDBuffer);
    textArea_ParameterID.setTypedText(TypedText(T_SINGLEUSEID75));

    textArea_ModuleID.setPosition(0, 122, 351, 49);
    textArea_ModuleID.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_ModuleID.setLinespacing(0);
    Unicode::snprintf(textArea_ModuleIDBuffer, TEXTAREA_MODULEID_SIZE, "%s", TypedText(T_SINGLEUSEID78).getText());
    textArea_ModuleID.setWildcard(textArea_ModuleIDBuffer);
    textArea_ModuleID.setTypedText(TypedText(T_SINGLEUSEID77));

    textArea_SourceID.setPosition(0, 73, 351, 49);
    textArea_SourceID.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_SourceID.setLinespacing(0);
    Unicode::snprintf(textArea_SourceIDBuffer, TEXTAREA_SOURCEID_SIZE, "%s", TypedText(T_SINGLEUSEID80).getText());
    textArea_SourceID.setWildcard(textArea_SourceIDBuffer);
    textArea_SourceID.setTypedText(TypedText(T_SINGLEUSEID79));

    textArea_Title.setXY(309, 0);
    textArea_Title.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_Title.setLinespacing(0);
    textArea_Title.setTypedText(TypedText(T_SINGLEUSEID63));

    textArea_ValueToSet.setPosition(415, 226, 361, 49);
    textArea_ValueToSet.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_ValueToSet.setLinespacing(0);
    Unicode::snprintf(textArea_ValueToSetBuffer, TEXTAREA_VALUETOSET_SIZE, "%s", TypedText(T_SINGLEUSEID115).getText());
    textArea_ValueToSet.setWildcard(textArea_ValueToSetBuffer);
    textArea_ValueToSet.setTypedText(TypedText(T_SINGLEUSEID114));

    textArea_ParameterToSet.setPosition(425, 49, 351, 49);
    textArea_ParameterToSet.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_ParameterToSet.setLinespacing(0);
    textArea_ParameterToSet.setTypedText(TypedText(T_SINGLEUSEID116));

    add(backgroundBox_Module1);
    add(buttonWithLabel_GoToMainMenu);
    add(textArea_CPU_Usage);
    add(buttonWithLabel_SetValue);
    add(slider_Value);
    add(radioButtonParameter2);
    add(textArea_Parameter2);
    add(radioButtonParameter1);
    add(textArea_Parameter1);
    add(line_Middle);
    add(textArea_CRC);
    add(textArea_Value);
    add(textArea_ParameterID);
    add(textArea_ModuleID);
    add(textArea_SourceID);
    add(textArea_Title);
    add(textArea_ValueToSet);
    add(textArea_ParameterToSet);
    radioButtonGroup.add(radioButtonParameter2);
    radioButtonGroup.add(radioButtonParameter1);
}

void Screen_Module1ViewBase::setupScreen()
{

}

void Screen_Module1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_GoToMainMenu)
    {
        //Interaction_GoBackToMainMenu
        //When buttonWithLabel_GoToMainMenu clicked change screen to Screen_Main
        //Go to Screen_Main with screen transition towards West
        application().gotoScreen_MainScreenSlideTransitionWest();
    }
    else if (&src == &buttonWithLabel_SetValue)
    {
        //Interaction_SetValueButtonPushed
        //When buttonWithLabel_SetValue clicked call virtual function
        //Call setNewValue
        setNewValue();
    }
}

void Screen_Module1ViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &slider_Value)
    {
        //Interaction_SliderAdjusted
        //When slider_Value value changed call virtual function
        //Call updateValueToSet
        updateValueToSet(value);
    }
}
