/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN_UART_VIEW_BASE_HPP
#define SCREEN_UART_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_uart_screen/Screen_UARTPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class Screen_UARTViewBase : public touchgfx::View<Screen_UARTPresenter>
{
public:
    Screen_UARTViewBase();
    virtual ~Screen_UARTViewBase() {}

    virtual void setupScreen();

    /*
     * Custom Action Handlers
     */
    virtual void sendUARTHello()
    {
        // Override and implement this function in Screen_UARTView
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box backgroundBox_UARTScreen;
    touchgfx::ButtonWithLabel buttonWithLabel_GoToMainMenu;
    touchgfx::ButtonWithLabel buttonWithLabel_SendUartHello;
    touchgfx::ButtonWithLabel buttonWithLabel_ClearUart;
    touchgfx::TextAreaWithOneWildcard textArea_UartRX;
    touchgfx::TextAreaWithOneWildcard textArea_UartTX;
    touchgfx::TextArea textArea_UARTHeader;
    touchgfx::TextAreaWithOneWildcard textArea_CPU_Usage;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_UARTRX_SIZE = 11;
    touchgfx::Unicode::UnicodeChar textArea_UartRXBuffer[TEXTAREA_UARTRX_SIZE];
    static const uint16_t TEXTAREA_UARTTX_SIZE = 11;
    touchgfx::Unicode::UnicodeChar textArea_UartTXBuffer[TEXTAREA_UARTTX_SIZE];
    static const uint16_t TEXTAREA_CPU_USAGE_SIZE = 6;
    touchgfx::Unicode::UnicodeChar textArea_CPU_UsageBuffer[TEXTAREA_CPU_USAGE_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen_UARTViewBase, const touchgfx::AbstractButton&> buttonCallback;

};

#endif // SCREEN_UART_VIEW_BASE_HPP
