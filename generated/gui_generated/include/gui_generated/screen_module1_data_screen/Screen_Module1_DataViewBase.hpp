/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN_MODULE1_DATA_VIEW_BASE_HPP
#define SCREEN_MODULE1_DATA_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_module1_data_screen/Screen_Module1_DataPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/containers/Container.hpp>

#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
class Screen_Module1_DataViewBase : public touchgfx::View<Screen_Module1_DataPresenter>
{
public:
    Screen_Module1_DataViewBase();
    virtual ~Screen_Module1_DataViewBase() {}

    virtual void setupScreen();

    /*
     * Custom Action Handlers
     */
    virtual void showAll()
    {
        // Override and implement this function in Screen_Module1_DataView
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box backgroundBox_Black;
    touchgfx::TextAreaWithOneWildcard textArea_CPU_Usage;
    touchgfx::ButtonWithLabel buttonWithLabel_GoToMainMenu;
    touchgfx::ButtonWithLabel buttonWithLabel_Graph;
    touchgfx::ButtonWithLabel buttonWithLabel_Settings;
    touchgfx::Line line1;
    touchgfx::PainterRGB565 line1Painter;
    touchgfx::Container textAreaContainer;
    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > textArea_Power;
    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > textArea_Frequency;
    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > textArea_Current;
    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > textArea_Voltage;

    touchgfx::TextArea textArea_Title;
    touchgfx::Button button1_ShowAll;
    touchgfx::ButtonWithLabel buttonWithLabel_Info;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_CPU_USAGE_SIZE = 6;
    touchgfx::Unicode::UnicodeChar textArea_CPU_UsageBuffer[TEXTAREA_CPU_USAGE_SIZE];
    static const uint16_t TEXTAREA_POWER_SIZE = 11;
    touchgfx::Unicode::UnicodeChar textArea_PowerBuffer[TEXTAREA_POWER_SIZE];
    static const uint16_t TEXTAREA_FREQUENCY_SIZE = 11;
    touchgfx::Unicode::UnicodeChar textArea_FrequencyBuffer[TEXTAREA_FREQUENCY_SIZE];
    static const uint16_t TEXTAREA_CURRENT_SIZE = 11;
    touchgfx::Unicode::UnicodeChar textArea_CurrentBuffer[TEXTAREA_CURRENT_SIZE];
    static const uint16_t TEXTAREA_VOLTAGE_SIZE = 11;
    touchgfx::Unicode::UnicodeChar textArea_VoltageBuffer[TEXTAREA_VOLTAGE_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen_Module1_DataViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // SCREEN_MODULE1_DATA_VIEW_BASE_HPP
