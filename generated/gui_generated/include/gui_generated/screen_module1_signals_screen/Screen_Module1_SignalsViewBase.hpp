/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN_MODULE1_SIGNALSVIEWBASE_HPP
#define SCREEN_MODULE1_SIGNALSVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_module1_signals_screen/Screen_Module1_SignalsPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/mixins/ClickListener.hpp>

class Screen_Module1_SignalsViewBase : public touchgfx::View<Screen_Module1_SignalsPresenter>
{
public:
    Screen_Module1_SignalsViewBase();
    virtual ~Screen_Module1_SignalsViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void setParameter1GraphVisible()
    {
        // Override and implement this function in Screen_Module1_Signals
    }

    virtual void setParameter2GraphVisible()
    {
        // Override and implement this function in Screen_Module1_Signals
    }

    virtual void setParameter3GraphVisible()
    {
        // Override and implement this function in Screen_Module1_Signals
    }

    virtual void setParameter4GraphVisible()
    {
        // Override and implement this function in Screen_Module1_Signals
    }

    virtual void updateTimeRange(int value)
    {
        // Override and implement this function in Screen_Module1_Signals
    }

    virtual void updateY_AxisMin(int value)
    {
        // Override and implement this function in Screen_Module1_Signals
    }

    virtual void updateY_AxisMax(int value)
    {
        // Override and implement this function in Screen_Module1_Signals
    }

    virtual void pressedAutoRangeToggleButton()
    {
        // Override and implement this function in Screen_Module1_Signals
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box backgroundBox_Black;
    touchgfx::ToggleButton toggleButton_Parameter1;
    touchgfx::ToggleButton toggleButton_Parameter2;
    touchgfx::ToggleButton toggleButton_Parameter3;
    touchgfx::ToggleButton toggleButton_Parameter4;
    touchgfx::TextArea textArea_Title;
    touchgfx::TextAreaWithOneWildcard textArea_CPU_Usage;
    touchgfx::ButtonWithLabel buttonWithLabel_Back;
    touchgfx::Slider slider_TimeRange;
    touchgfx::Slider slider_Y_AxisMin;
    touchgfx::TextAreaWithOneWildcard textArea_TimeRange;
    touchgfx::TextAreaWithOneWildcard textArea_Y_AxisMin;
    touchgfx::Slider slider_Y_AxisMax;
    touchgfx::TextAreaWithOneWildcard textArea_Y_AxisMax;
    touchgfx::TextArea textArea_Auto_Y_Range;
    touchgfx::ToggleButton toggleButton_Auto_Y_Range;
    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > textArea_Parameter1Name;
    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > textArea_Parameter2Name;
    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > textArea_Parameter3Name;
    touchgfx::ClickListener< touchgfx::TextAreaWithOneWildcard > textArea_Parameter4Name;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_CPU_USAGE_SIZE = 6;
    touchgfx::Unicode::UnicodeChar textArea_CPU_UsageBuffer[TEXTAREA_CPU_USAGE_SIZE];
    static const uint16_t TEXTAREA_TIMERANGE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_TimeRangeBuffer[TEXTAREA_TIMERANGE_SIZE];
    static const uint16_t TEXTAREA_Y_AXISMIN_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_Y_AxisMinBuffer[TEXTAREA_Y_AXISMIN_SIZE];
    static const uint16_t TEXTAREA_Y_AXISMAX_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_Y_AxisMaxBuffer[TEXTAREA_Y_AXISMAX_SIZE];
    static const uint16_t TEXTAREA_PARAMETER1NAME_SIZE = 11;
    touchgfx::Unicode::UnicodeChar textArea_Parameter1NameBuffer[TEXTAREA_PARAMETER1NAME_SIZE];
    static const uint16_t TEXTAREA_PARAMETER2NAME_SIZE = 11;
    touchgfx::Unicode::UnicodeChar textArea_Parameter2NameBuffer[TEXTAREA_PARAMETER2NAME_SIZE];
    static const uint16_t TEXTAREA_PARAMETER3NAME_SIZE = 11;
    touchgfx::Unicode::UnicodeChar textArea_Parameter3NameBuffer[TEXTAREA_PARAMETER3NAME_SIZE];
    static const uint16_t TEXTAREA_PARAMETER4NAME_SIZE = 11;
    touchgfx::Unicode::UnicodeChar textArea_Parameter4NameBuffer[TEXTAREA_PARAMETER4NAME_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen_Module1_SignalsViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<Screen_Module1_SignalsViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);

};

#endif // SCREEN_MODULE1_SIGNALSVIEWBASE_HPP
